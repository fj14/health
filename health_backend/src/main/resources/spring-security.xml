<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
    <!--http：用于定义相关权限控制
          指定哪些资源不需要进行权限校验，可以使用通配符-->
    <security:http security="none" pattern="/css/**"/>
    <security:http security="none" pattern="/img/**"/>
    <security:http security="none" pattern="/js/**"/>
    <security:http security="none" pattern="/plugins/**"/>
    <security:http security="none" pattern="/login.html"/>

    <!--http：用于定义相关权限控制
    auto-config：是否启用自动配置
                    设置为true时，框架会自动提供一些默认配置，例如提供默认的登录界面，登出处理等
                    设置为false时需要提供登录表单配置，或者会抛出异常
    use-expressions：用于指定intercept-url中的access属性是否使用表达式，表达式来之SecurityExpressionRoot类-->
    <security:http auto-config="true" use-expressions="true">
        <security:headers>
            <!--设置在页面可以通过iframe访问受保护的页面，默认为不允许访问-->
            <security:frame-options policy="SAMEORIGIN"/>
        </security:headers>

        <!--intercept-url：定义一个拦截规则
            pattern：对哪些url进行权限控制
            access：在请求对应的URL时需要什么权限，默认配置时它应该是一个以逗号分隔的角色列表，
                    请求的用户只需拥有其中的一个角色就能成功访问对应的URL
                    isAuthenticated()：已经经过认证（不是匿名用户）-->
        <security:intercept-url pattern="/pages/**" access="isAuthenticated()"/>

        <!--如果我们要使用自己指定的页面作为登录页面，必须配置登录表单.页面提交的登录表单请求是由框架负责处理
        form-login：定义表单登录信息
                    login-page：指定登录页面访问URL
                    username-parameter：用户名的请求字段 默认为userName，匹配表单用户名输入框name属性
                    password-parameter：密码的请求字段 默认为password，匹配表单用户密码框name属性
                    login-processing-url：登录请求拦截的url,也就是form表单提交时指定的action
                    default-target-url：登录成功后跳转的url
                    authentication-failure-url：登录失败后跳转的url-->
        <security:form-login login-page="/login.html"
                             username-parameter="username"
                             password-parameter="password"
                             login-processing-url="/login.do"
                             default-target-url="/pages/main.html"
                             authentication-failure-url="/login.html"/>

        <!--csrf：对应CsrfFilter过滤器
          disabled：是否启用CsrfFilter过滤器，如果使用自定义登录页面需要关闭此项，否则登录操作会被禁用（403）-->
        <security:csrf disabled="true"/>

        <!--logout：退出登录
         logout-url：退出登录操作对应的请求路径
         logout-success-url：退出登录后的跳转页面
         invalidate-session：销毁session-->
        <security:logout logout-url="/logout.do" logout-success-url="/login.html" invalidate-session="true"/>
    </security:http>

    <!--配置认证管理器,用于处理认证操-->
    <security:authentication-manager>
        <!--配置认证提供者,执行具体的认证逻辑-->
        <security:authentication-provider user-service-ref="springSecurityUserServiceImpl">
            <!--指定密码加密策略-->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!--配置密码加密对象-->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!--开启注解方式权限控制-->
    <security:global-method-security pre-post-annotations="enabled"/>
</beans>